version: 2.1
executors:
  go:
    docker:
      - image: cimg/go:1.15.5
    environment:
      VERSION: 2.0.0
  python:
    docker:
      - image: cimg/python:3.6
    environment:
      AWS_REGION_SA_EAST_1: sa-east-1
orbs:
  go: circleci/go@1.5.0
  aws-ecr: circleci/aws-ecr@6.2.0
jobs:
  test:
    docker:
      - image: cimg/go:1.15.5
      - image: circleci/node:latest
      - image: mongo:4.2
    environment:
      MONGO_INITDB_ROOT_USERNAME: ze_admin
      MONGO_INITDB_ROOT_PASSWORD: 10YKs8yyHIV0TxFI
      MONGO_INITDB_DATABASE: ze_delivery
      MONGO_INITDB_USERNAME: ze_user
      MONGO_INITDB_PASSWORD: hES6m2EXdjKqVkRf
    steps:
      - attach_workspace:
          at: .
      - checkout
      - go/mod-download-cached  
      - run:
          name: Demonstrate that Mongo DB is available as localhost
          command: |
            curl -sSJL https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
            echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list
            sudo apt update
            sudo apt install mongodb-org
            mongo localhost --eval 'db.serverStatus()'
      - run:
          name: Create Ze Delivery User in the MongoDB
          command: |
            mongo --eval "db = db.getSiblingDB('$MONGO_INITDB_DATABASE'); db.createUser({ user: '$MONGO_INITDB_USERNAME', pwd: '$MONGO_INITDB_PASSWORD', roles: [{ role: 'readWrite', db: '$MONGO_INITDB_DATABASE' }] });"
      - run:
          name: Wait for Mongodb
          command: dockerize -wait tcp://localhost:27017 -timeout 1m
      - run:
          name: Running tests
          command: go test ./...
  lint:
    executor: go
    steps:
      - run: go get honnef.co/go/tools/cmd/staticcheck
      - checkout
      - run: go vet ./...
  tag:
    executor: go
    docker:
      - image: cimg/base:2020.05
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:28:a5:62:74:20:4f:61:76:ff:2a:0e:d0:b7:f8"
      - checkout
      - run: |
          TAG="v$VERSION-$CIRCLE_BUILD_NUM-prod"
          git tag $TAG
          git push origin $TAG
  tag-development:
    executor: go
    docker:
      - image: cimg/base:2020.05
    steps:
      - add_ssh_keys:
          fingerprints:
            - "ec:9f:28:a5:62:74:20:4f:61:76:ff:2a:0e:d0:b7:f8"
      - checkout
      - run: |
          TAG="v$VERSION-$CIRCLE_BUILD_NUM-dev"
          git tag $TAG
          git push origin $TAG
  publish:
    executor: python
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12

      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID_PRODUCTION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY_PRODUCTION
          create-repo: true
          dockerfile: Dockerfile
          region: AWS_REGION_SA_EAST_1
          repo: 'ze-delivery'
          tag: "$CIRCLE_SHA1"

  publish-development:
    executor: go
    docker:
      - image: cimg/base:2020.05
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.12
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID_DEVELOPMENT
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY_DEVELOPMENT
          create-repo: true
          dockerfile: Dockerfile
          region: AWS_REGION_SA_EAST_1
          repo: 'ze-delivery-development'
          tag: "$CIRCLE_SHA1"
workflows:
  version: 2
  pipeline:
    jobs:
      - test:
          filters:
            tags:
              only: /v.*/
      - lint:
          filters:
            tags:
              only: /v.*/
      - tag:
          requires:
            - test
            - lint
          filters:
            branches:
              only: 
                - main
      - tag-development:
          requires:
            - test
            - lint
          filters:
            branches:
              only: 
                - development

      # - publish:
      #     context: ze_delivery
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         ignore: /.*/
      #       tags:
      #         only: /^v[0-9]+(\.[0-9]+)+(\-[0-9]+)+(\-prod)/
      # - publish-development:
      #     context: ze_delivery
      #     requires:
      #       - test
      #       - lint
      #     filters:
      #       branches:
      #         ignore: /.*/
      #       tags:
      #         only: /^v[0-9]+(\.[0-9]+)+(\-[0-9]+)+(\-dev)/
